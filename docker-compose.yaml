services:
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  otel-collector:
    image: otel/opentelemetry-collector:0.103.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: always
    ports:
      - 3100:3100

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./.docker/datasources.yaml:/etc/grafana/provisioning/datasources/automatic.yml
      - ./.docker/dashboards-provisioning.yaml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./.docker/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000

  app:
    container_name: app
    build:
      context: ./nest-service
      dockerfile: "Dockerfile.dev"
    environment:
      - TITLE=Microservice Demo
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=green
      - RESPONSE_TIME=1000
      - EXTERNAL_CALL_URL=http://app2:8181
      - EXTERNAL_CALL_METHOD=GET
      - REQUEST_NAME_OTEL=microservice-demo-request
      - OTEL_SERVICE_NAME=microservice-demo
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - HTTP_PORT=8484
    volumes:
      - ./nest-service/:/home/node/app:cached
    ports:
      - "8484:8484"
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - prometheus
      - otel-collector

  app2:
    container_name: app2
    build:
      context: ./nest-service
      dockerfile: "Dockerfile.dev"
    environment:
      - TITLE=Microservice Demo 2
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=blue
      - EXTERNAL_CALL_URL=http://app3:8282
      - EXTERNAL_CALL_METHOD=GET
      - RESPONSE_TIME=2000
      - REQUEST_NAME_OTEL=microservice-demo2-request
      - OTEL_SERVICE_NAME=microservice-demo2
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - HTTP_PORT=8181
    volumes:
      - ./nest-service/:/home/node/app:cached
    ports:
      - "8181:8181"
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - prometheus
      - otel-collector

  app3:
    container_name: app3
    build:
      context: ./nest-service
      dockerfile: "Dockerfile.dev"
    environment:
      - TITLE=Microservice Demo 3
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=red
      - EXTERNAL_CALL_URL=http://app4:8383
      - EXTERNAL_CALL_METHOD=GET
      - RESPONSE_TIME=2000
      - REQUEST_NAME_OTEL=microservice-demo3-request
      - OTEL_SERVICE_NAME=microservice-demo3
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - HTTP_PORT=8282
    volumes:
      - ./nest-service/:/home/node/app:cached
    ports:
      - "8282:8282"
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - prometheus
      - otel-collector

  app4:
    container_name: app4
    build:
      context: ./nest-service
      dockerfile: "Dockerfile.dev"
    environment:
      - TITLE=Microservice Demo 4
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=gray
      - RESPONSE_TIME=2500
      - REQUEST_NAME_OTEL=microservice-demo4-request
      - OTEL_SERVICE_NAME=microservice-demo4
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - HTTP_PORT=8383
    volumes:
      - ./nest-service/:/home/node/app:cached
    ports:
      - "8383:8383"
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - prometheus
      - otel-collector

  app5:
    container_name: app5
    build:
      context: .
    environment:
      - TITLE=Microservice Demo 5
      - CONTENT=This is a demo of a microservice
      - BACKGROUND_COLOR=blue
      - RESPONSE_TIME=2000
      - REQUEST_NAME_OTEL=microservice-demo5-request
      - OTEL_SERVICE_NAME=microservice-demo5
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - HTTP_PORT=:8585
    ports:
      - "8585:8585"
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - prometheus
      - otel-collector

  db:
    container_name: db
    image: postgres:17.6-alpine
    restart: always
    shm_size: 256mb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
